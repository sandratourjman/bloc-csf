1. A line of people at an amusement park ride.

The line is composed of members, represented as strings.
There is a front to the line, as well as a back.
When someone enters the line, place them at the end.
People may leave the line whenever they see fit, and those behind them take their place.
Given the above real-world information, use an array data structure to code the following solution.

a) Use an array input: ["Vivian", "Ava", "Josh", "Patrick", "Mike"]
b) Insert a new person, "Mary" at the end of the line. In other words, you should insert Mary after Mike.
c) Find a person in line named "Josh." This function should return the position of 2 in the array, (recall that arrays are 0-based).
d) Find a person in line named "Emily." What should your function return if it does not find the item in the array?
e) What if Ava wants to allow a friend, "Melissa", to cut in line in front of her? How would you code this so Melissa appears before Ava?
f) If Patrick wants to leave the line, how would you delete him from the array?


a. let arr =  ["Vivian", "Ava", "Josh", "Patrick", "Mike"];
b. arr.push("Mary");
c. function findPersonIndex(name) {
	return arr.indexOf(name);
}

findPersonIndex("Josh");


d. function findPerson(name) {
	if(arr.includes(name)) {
      let indexOfPerson = arr.indexOf(name);
		return (name + " found at index of " + indexOfPerson);
	} else {
		return (name + " not found");
	}
}

findPerson("Emily");


e. arr.splice(1,0, "Melissa");


f. function leaveLine(person) {
	let indexOfPersonLeaving = arr.indexOf(person);
    arr.splice(indexOfPersonLeaving, 1);
	return arr;
} 

leaveLine("Patrick");

2. Provide another real-world example that you can model using a data structure.

A: Another real-world example that can be modelled using a data structure is organizing a book shelf of books. For example, your array can look like this with books

let books = ["Harry Potter series", "The Giver", "Gone with the Wind", "Pride and Prejudice"];

3. How would your data structure allow developers to access and manipulate the data?

A: Developers can access the data by the values or the index of specific values. If a developer doesn't know the index of the book and wants to find one without looping through, they could use the find method, or even filter the array by including part of the name. You can add or remove books as they get added to your shelf. You can shift books, pop off the last item on the shelf, search to see if a new book is already in your collection, reorder the books alphabetically, etc. 